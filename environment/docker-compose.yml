version: '3.9'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1 
    ports:
      - "2181:2181"
      - "9999:9999"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_JMX_PORT: 9999  
      KAFKA_JMX_HOSTNAME: zookeeper
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=1234:/usr/share/jmx-exporter/zookeeper.yml
    volumes:
      - ./shared-assets/jmx-exporter/:/usr/share/jmx-exporter
   
  broker:
    image: confluentinc/cp-server:7.2.1 
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: broker
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=1234:/usr/share/jmx-exporter/kafka_broker.yml
    volumes:
      - ./shared-assets/jmx-exporter/:/usr/share/jmx-exporter

  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.1 
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      EXTRA_ARGS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=1234:/usr/share/jmx-exporter/confluent_schemaregistry.yml
    volumes:
      - ./shared-assets/jmx-exporter/:/usr/share/jmx-exporter

  connect:
    image: confluentinc/cp-server-connect-otel:7.2.1
    build:
      context: ../connect
      dockerfile: Dockerfile 
      args: 
        OTEL_VERSION: 1.15.0   
        PROMETHEUS_AGENT_VERSION: 0.16.1
        APP_NAME: connect 
        COLLECTOR_ENDPOINT: http://collector:4317
    command: /bin/sh -c "./deploy.sh"  
    depends_on:
      - broker
      - schema-registry
    ports:
      - "8083:8083" # Connect REST API
    environment: 
      CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-6.2.0.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR 

  ksqldb:
    image: confluentinc/cp-ksqldb-server:7.2.1
    hostname: ksqldb
    container_name: ksqldb
    depends_on:
      - broker
      - schema-registry
      # - connect
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: "broker:29092"
      KSQL_HOST_NAME: ksqldb
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_KSQL_CONNECT_URL: "http://connect:8083"
      KSQL_KSQL_INTERNAL_TOPIC_REPLICAS: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.2.1 
    depends_on:
      - broker
      - schema-registry
      # - connect
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  prometheus:
    image: prom/prometheus:v2.36.2 
    command:
      - '--config.file=/etc/prometheus/prometheus.yml' 
    ports:
      - 9090:9090
    volumes:
      - ./monitoring/assets/prometheus/prometheus-config/:/etc/prometheus 

  kafka-lag-exporter:
    image: lightbend/kafka-lag-exporter:0.6.7
    restart: always
    volumes:
      - ./shared-assets/kafka-lag-exporter:/opt/docker/conf
      - ./monitoring/assets/prometheus/security:/etc/kafka/secrets 

  grafana:
    image: grafana/grafana:9.0.2
    environment:
      - "GF_SECURITY_ADMIN_USER=admin"
      - "GF_SECURITY_ADMIN_PASSWORD=password"
      - "GF_USERS_ALLOW_SIGN_UP=false"
    ports:
      - "3000:3000" 
    volumes:
      - ./monitoring/assets/grafana/provisioning/:/etc/grafana/provisioning

  zipkin:
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
    environment:
      JAVA_OPTS: -Xms1g -Xmx1g -XX:+ExitOnOutOfMemoryError
  # Jaeger
  jaeger:
   image: jaegertracing/all-in-one:latest
   ports:
     - "16686:16686"
     - "14268"
     - "14250"

  # Collector
  collector:
   image: otel/opentelemetry-collector:latest
   volumes:
     - ./collector/config.yml:/etc/collector-gateway.yaml
   command: [ "--config=/etc/collector-gateway.yaml" ]
   ports:
     - "1888:1888"   # pprof extension
     - "13133:13133" # health_check extension
     - "4317:4317"        # OTLP gRPC receiver
     - "4318:4318"        # OTLP HTTP receiver
     - "55670:55679" # zpages extension
   depends_on:
     - jaeger
     - zipkin

### APP
 #go http service
  http-service: 
    build:
      context: ../go-http-service
      dockerfile: Dockerfile 
    ports:
      - "8080:8080"
    depends_on:
     - collector
     - broker
     # - connect

  #go-consumer
  go-consumer: 
    build:
      context: ../go-consumer
      dockerfile: Dockerfile  
    depends_on:
     - collector  
     - broker 
     # - connect

  #java producer
  fact-producer: 
    build:
      context: ../java/fact-producer
      dockerfile: Dockerfile 
      args: 
        OTEL_VERSION: 1.15.0 
        PROMETHEUS_AGENT_VERSION: 0.17.0
        APP_NAME: chuck-fact-producer 
        COLLECTOR_ENDPOINT: http://collector:4317    
    ports:
      - "38080:38080"
    volumes:
      - ./shared-assets/jmx-exporter/:/usr/share/jmx-exporter 
    depends_on:
      - broker
      - schema-registry
      - collector  
  #java consumer
  fact-consumer: 
    build:
      context: ../java/fact-consumer
      dockerfile: Dockerfile 
      args: 
        OTEL_VERSION: 1.15.0 
        PROMETHEUS_AGENT_VERSION: 0.17.0 
        APP_NAME: chuck-fact-consumer 
        COLLECTOR_ENDPOINT: http://collector:4317  
    volumes:
      - ./shared-assets/jmx-exporter/:/usr/share/jmx-exporter 
    depends_on:
      - broker
      - fact-producer
      - schema-registry
      - collector  
  fact-wordcount-kstream: 
    build:
      context: ../java/fact-wordcount-kstream
      dockerfile: Dockerfile 
      args: 
        OTEL_VERSION: 1.15.0 
        PROMETHEUS_AGENT_VERSION: 0.17.0 
        APP_NAME: fact-wordcount-kstream 
        COLLECTOR_ENDPOINT: http://collector:4317  
    volumes:
      - ./shared-assets/jmx-exporter/:/usr/share/jmx-exporter 
    depends_on:
      - broker
      - fact-producer
      - schema-registry
      - collector
  wordcount-consumer: 
    build:
      context: ../java/wordcount-consumer
      dockerfile: Dockerfile 
      args: 
        OTEL_VERSION: 1.15.0 
        PROMETHEUS_AGENT_VERSION: 0.17.0 
        APP_NAME: wordcount-consumer
        COLLECTOR_ENDPOINT: http://collector:4317  
    volumes:
      - ./shared-assets/jmx-exporter/:/usr/share/jmx-exporter 
    depends_on:
      - broker
      - fact-wordcount-kstream
      - schema-registry
      - collector 
  fact-stats-java: 
    build:
      context: ../java/fact-stats-java
      dockerfile: Dockerfile 
      args: 
        OTEL_VERSION: 1.15.0 
        PROMETHEUS_AGENT_VERSION: 0.17.0 
        APP_NAME: fact-stats
        COLLECTOR_ENDPOINT: http://collector:4317  
    volumes:
      - ./shared-assets/jmx-exporter/:/usr/share/jmx-exporter 
    depends_on:
      - broker
      - schema-registry
      - collector 
  stats-consumer: 
    build:
      context: ../java/stats-consumer
      dockerfile: Dockerfile 
      args: 
        OTEL_VERSION: 1.15.0 
        PROMETHEUS_AGENT_VERSION: 0.17.0 
        APP_NAME: stats-consumer
        COLLECTOR_ENDPOINT: http://collector:4317  
    volumes:
      - ./shared-assets/jmx-exporter/:/usr/share/jmx-exporter 
    depends_on:
      - broker
      - schema-registry
      - collector 